---
# YAML script for provisioning a local Marmotta instance
#
# this is untested - recording setup steps 

- name: install java8
  apt_repository: repo='ppa:openjdk-r/ppa'

- name: Install Marmotta Dependencies
  apt: name={{item}} state=present update_cache=yes cache_valid_time=3600
  with_items:
    - {{ tomcat_version }}
    # needed if we're not pulling in tomcat
    - openjdk-8-jdk
  tags: [install]

- file: path=/tmp/{{ application_name }} state=directory
  tags: [ldp]

- name: fetch marmotta
  get_url: url={{ marmotta_download }} dest=/var/lib/{{ tomcat_version }}/webapps/marmotta.war
  tags: [ldp]


- stat: path=/var/lib/{{ tomcat_version }}/webapps/geoserver/WEB-INF/lib/postgresql-9.4-1201-jdbc41.jar
  register: postgresql_source
  tags: [postgres]

- stat: path=/usr/share/{{ tomcat_version }}/lib/postgresql-9.4-1201-jdbc41.jar
  register: postgresql_target
  tags: [postgres]

- name: move postgresql-9.4-1201-jdbc41.jar
  command: mv [postgresql_source - need YAML syntax for this!!] [postgresql_target]
  sudo: yes
  when: postgresql_source.stat.exists and not postgresql_target.stat.exists
  tags: [postgres]

  
- name: restart tomcat
  service: name={{ tomcat_version }} state=restarted
  tags: [marmotta]

- wait_for: path=/var/lib/{{ tomcat_version }}/webapps/marmotta/WEB-INF/

## set up marmotta user and jdbc config

## sudo -u postgres createuser -P marmotta

send something to marmotta as its very first web access to set its hostname!
http://resources.opengeospatial.org/

curl -X POST -u admin:pass123 -d '["standard"]' http://localhost:8080/marmotta/config/data/security.profile
curl -iX POST -H "Content-Type: application/json" -d '["standard"]' http://localhost:8080/marmotta/config/data/security.profile
edit /tmp/marmotta/system-config.properties
  add security.enabled = true
 - if use postgres  set database.url and database username password/
  
 run syncdb - set DJANGO_SETTINGS_ and create a manage.py above geonode installed path - all a massive pain.

 http://resources.opengeospatial.org/

 
 add voc container to marmotta:
 curl -i -X POST -d @../django-skosxl/skosxl/fixtures/voc_ldp_container.ttl -H "Content-Type: text/turtle" -H "Slug: voc" http://resources.opengeospatial.org:8080/marmotta/ldp
 cd {project}/../django-skosxl/skosxl/fixtures
  curl -i -X POST -u admin:xxx -d @voc_ldp_container.ttl -H "Content-Type: text/turtle" -H "Slug: voc" http://resources.opengeospatial.org:8080/marmotta/ldp
register rules
curl -i -u admin:xxx -H "Content-Type: text/plain" -X POST --data-binary @skos.kwrl http://localhost:8080/marmotta/reasoner/program/skos.kwrl
  